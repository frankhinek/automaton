---
- name: dotfiles | find files ending with the .symlink extension
  find:
    paths: '{{ playbook_dir }}/roles/dotfiles'
    patterns: '*.symlink'
    recurse: yes
  register: find_symlinks

###############################################################################
# Backup existing dotfiles in the home directory before symlinking new paths
###############################################################################

- name: dotfiles | gather stats on any existing ~/.dotfile
  stat:
    path: ~/.{{ (item.path | basename | splitext)[0] }}
  register: existing_dotfiles
  with_items: '{{find_symlinks.files}}'

- name: dotfiles | create backup directory for non-symlink originals
  file: path=~/.backups state=directory

- name: dotfiles | gather stats on any existing ~/.backups/.dotfile
  stat:
    path: ~/.backups/.{{ (item.path | basename | splitext)[0] }}
  register: existing_backups
  with_items: '{{find_symlinks.files}}'

- name: dotfiles | halt if ~/.dotfile and backup ~/.backups/.dotfile both exist and ~/.dotfile isn't a symlink
  fail: msg="Cannot create backup!  ~/.backups/{{ (item.0.stat.path | basename | splitext)[0] }} already exists!"
  with_together:
    - '{{existing_dotfiles.results}}'
    - '{{existing_backups.results}}'
  when: item.0.stat.exists and item.1.stat.exists and item.0.stat.islnk == False

- name: dotfiles | backup originals
  command:
    mv ~/.{{ (item.0.path | basename | splitext)[0] }} ~/.backups/
    creates=~/.backups/.{{ (item.0.path | basename | splitext)[0] }}
    removes=~/.{{ (item.0.path | basename | splitext)[0] }}
  with_together:
    - '{{find_symlinks.files}}'
    - '{{existing_dotfiles.results}}'
  when: item.1.stat.islnk is defined and item.1.stat.islnk == False  # item exists and is not a symlink
  loop_control:
    label: '.{{ (item.0.path | basename | splitext)[0] }}'

###############################################################################
# Create symlinks to dotfiles
###############################################################################

- name: dotfiles | create symlinks
  file: src={{ item.path }}
        path=~/.{{ (item.path | basename | splitext)[0] }}
        state=link
        force=yes
  with_items: '{{find_symlinks.files}}'

###############################################################################
# Run other tasks that are part of the role
###############################################################################

- include_tasks: zsh.yml
