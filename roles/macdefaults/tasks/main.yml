---

# `defaults read` commands fail with exit status 255 if invoked improperly, but
# 1 for non-fatal problems, such as missing values.

# Close any open System Preferences panes, to prevent them from overriding
# settings weâ€™re about to change
- name: defaults | close open System Preferences panes
  command: osascript -e 'tell application "System Preferences" to quit'

# Many of these settings taken (or modified) from:
#
#   https://github.com/mathiasbynens/dotfiles/blob/master/.macos
#   https://github.com/wincent/wincent/blob/master/roles/defaults/tasks/main.yml
#

###############################################################################
# Continuity                                                                        #
###############################################################################

# Last tested: [12.6.0]
- name: macdefaults | System Preferences -> General -> Allow Handoff between this Mac and your iCloud devices
  community.general.osx_defaults: domain=com.apple.coreservices.useractivityd host=currentHost key=ActivityAdvertisingAllowed type=bool value=true
- name: macdefaults | System Preferences -> General -> Allow Handoff between this Mac and your iCloud devices
  community.general.osx_defaults: domain=com.apple.coreservices.useractivityd host=currentHost key=ActivityReceivingAllowed type=bool value=true

# Block periodically disables Handoff, so setup a crontab on work systems
- include_tasks: crontab-handoff.yml
  when:
    - "'work' in group_names"

###############################################################################
# Dock                                                                        #
###############################################################################

# Only wipe all (default) app icons from the Dock when setting up a new Mac
- name: macdefaults | check if ~/.dockinit exists
  stat:
    path: '{{ ansible_env.HOME }}/.dockinit'
  register: dockinit_check
- name: macdefaults | wipe the default Dock icons
  command: defaults write com.apple.dock persistent-apps -array
  when: dockinit_check.stat.exists == False
- name: macdefaults | create the ~/.dockinit file now that the Dock icons have been wiped
  file:
    path: '{{ ansible_env.HOME }}/.dockinit'
    state: touch
  when: dockinit_check.stat.exists == False

# Last tested: [10.12.6]
# - name: macdefaults | enable highlight hover effect for the grid view of a stack (Dock)
#   community.general.osx_defaults: domain=com.apple.dock key=mouse-over-hilite-stack type=bool value=true

# Last tested: [12.6.0]
- name: macdefaults | set the icon size of Dock items to 64 pixels
  community.general.osx_defaults: domain=com.apple.dock key=tilesize type=float value=64

# Last tested: [10.12.6]
# - name: macdefaults | System Preferences -> Dock -> Minimize windows using Scale effect
#   community.general.osx_defaults: domain=com.apple.dock key=mineffect type=string value=scale

# Last tested: [10.12.6]
# - name: macdefaults | System Preferences -> Dock -> Minimize windows into application icon
#   community.general.osx_defaults: domain=com.apple.dock key=minimize-to-application type=bool value=true

# Last tested: [10.12.6]
# - name: macdefaults | System Preferences -> Dock -> Show indicators for open applications
#   community.general.osx_defaults: domain=com.apple.dock key=show-process-indicators type=bool value=true

# Last tested: [12.6.0]
- name: macdefaults | System Preferences -> Dock -> Automatically hide and show Dock
  community.general.osx_defaults: domain=com.apple.dock key=autohide type=bool value=true

###############################################################################
# Input devices                                                               #
###############################################################################

# Last tested [10.12.6]
# - name: macdefaults | System Preferences -> Trackpad -> Point & Click -> Tap to click (Tap with one finger) - built-in Trackpad
#   command: defaults write com.apple.AppleMultitouchTrackpad Clicking -bool true
# - name: macdefaults | System Preferences -> Trackpad -> Point & Click -> Tap to click (Tap with one finger) - external Trackpad
#   command: defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true

# Last tested [10.12.6]
# - name: macdefaults | enable tap to click (Trackpad) for the login screen
#   community.general.osx_defaults: domain=NSGlobalDomain host=currentHost key=com.apple.mouse.tapBehavior type=int value=1
# - name: macdefaults | enable tap to click (Trackpad) for this user
#   community.general.osx_defaults: domain=NSGlobalDomain key=com.apple.mouse.tapBehavior type=int value=1

# Last tested [10.12.6]
# - name: macdefaults | System Preferences -> Accessibility -> Mouse & Trackpad -> Trackpad Options -> Enable dragging (with drag lock) - built-in Trackpad
#   command: defaults write com.apple.AppleMultitouchTrackpad DragLock -bool true
# - name: macdefaults | System Preferences -> Accessibility -> Mouse & Trackpad -> Trackpad Options -> Enable dragging (with drag lock) - built-in Trackpad
#   command: defaults write com.apple.AppleMultitouchTrackpad Dragging -bool true
# - name: macdefaults | System Preferences -> Accessibility -> Mouse & Trackpad -> Trackpad Options -> Enable dragging (with drag lock) - external Trackpad
#   command: defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad DragLock -bool true
# - name: macdefaults | System Preferences -> Accessibility -> Mouse & Trackpad -> Trackpad Options -> Enable dragging (with drag lock) - external Trackpad
#   command: defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Dragging -bool true

# Last tested [10.13.6]
# - name: macdefaults | System Preferences -> Keyboard  -> Text -> Use smart quotes and dashes
#   command: defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false
# - name: macdefaults | System Preferences -> Keyboard  -> Text -> Use smart quotes and dashes
#   command: defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false

# Last tested [10.13.6]
# - name: macdefaults | disable auto capitalize
#   command: defaults write NSGlobalDomain NSAutomaticCapitalizationEnabled -bool false

# Last tested [10.13.6]
# - name: macdefaults | disable auto period insert
#   command: defaults write NSGlobalDomain NSAutomaticPeriodSubstitutionEnabled -bool false

###############################################################################
# Energy Saver                                                                #
###############################################################################

# References:
#     https://apple.stackexchange.com/a/262593
#     https://developer.apple.com/legacy/library/documentation/Darwin/Reference/ManPages/man1/pmset.1.html
#
# Simplistically, there are two energy saving modes:
#     - Sleep: RAM contents will be maintained
#     - Hibernation: RAM contents will be saved to persistent storage (SSD)
#
# Current settings can get checked using `pmset -g custom` command
#
# The -a, -b, -c, -u flags deter-mine determine whether the settings apply to
# battery (-b), charger (wall power) (-c), UPS (-u) or all (-a).
#
# If sleep == 0, the system will not sleep or hibernate
# If standby == 1 and hibernatemode == 3, the system will wait standbydelay
#     seconds before entering Hibernation
# autopoweroff is an extra implementation to comply with European regulatory
#     requirements and has the same impact as standby
# If both sleep and hibernate are enabled, the one that is reached first,
#     from a time delay perspective, takes effect
# If standby == 1 and hibernatemode == 25, the system will enter hibernation
#     immediately after sleep minutes
#
# autopoweroff - Where supported, enabled per default as an implementation of
#     Lot 6 to the European Energy-related Products Directive. After sleeping
#     for <autopoweroffdelay> minutes, the system will write a hibernation image
#     and go into a lower power chipset sleep. Wakeups from this state will take
#     longer than wakeups from regular sleep. The system will not auto power off
#     if any external devices are connected, if the system is on battery power,
#     or if the system is bound to a network and wake for network access is
#     enabled.

# - name: macdefaults | set standby delay for battery to 12 hours (default is 3)
#   command: pmset -b standbydelay 43200
#   become: true

# - name: macdefaults | set standby delay for charger to 12 hours (default is 3)
#   command: pmset -c standbydelay 43200
#   become: true

# - name: macdefaults | set auto power off delay for battery to 24 hours (default is 8)
#   command: pmset -b autopoweroffdelay 86400
#   become: true

# - name: macdefaults | set auto power off delay for charger to 24 hours (default is 8)
#   command: pmset -c autopoweroffdelay 86400
#   become: true

# - name: macdefaults | show battery percentage in menu battery
#   community.general.osx_defaults: domain=com.apple.menuextra.battery key=ShowPercent type=string value=YES
