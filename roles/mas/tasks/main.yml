---
- name: mas | ensure MAS is installed
  homebrew: name=mas state=present

- name: mas | get MAS account status
  shell: 'mas account'
  register: mas_account_result
  failed_when: mas_account_result.rc > 1
  changed_when: false

- name: mas | sign in to MAS when email and password are provided
  shell: 'mas signin "{{ mas_email }}" "{{ mas_password }}"'
  register: mas_signin_result
  when: mas_account_result.rc == 1 and mas_email != '' and mas_password != '' and not mas_signin_dialog

- name: mas | sign in to MAS when email is provided, and complete password and 2FA using dialog
  shell: 'mas signin "{{ mas_email }}" "{{ mas_password }}" --dialog'
  register: mas_signin_result
  when: mas_signin_dialog and mas_account_result.rc == 1 and mas_email != ''

- name: mas | list installed MAS apps
  command: mas list
  register: mas_list
  check_mode: no
  changed_when: false

- name: mas | ensure MAS apps suitable for all macOS systems are installed
  command: mas install "{{ item.id }}"
  with_items: "{{ mas_installed_apps.all }}"
  when: item.id|string not in mas_list.stdout

- name: mas | ensure MAS apps suitable for personal macOS systems are installed
  command: mas install "{{ item.id }}"
  with_items: "{{ mas_installed_apps.personal }}"
  when:
    - "'personal' in group_names"
    - item.id|string not in mas_list.stdout

- name: mas | ensure MAS apps suitable for work macOS systems are installed
  command: mas install "{{ item.id }}"
  with_items: "{{ mas_installed_apps.work }}"
  when:
    - "'work' in group_names"
    - item.id|string not in mas_list.stdout

- name: mas | upgrade all apps (if configured)
  command: mas upgrade
  when: mas_upgrade_all_apps

###############################################################################
# Run other tasks that are part of the role
###############################################################################

- include_tasks: automounter-helper.yml
